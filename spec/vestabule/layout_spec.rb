# frozen_string_literal: true

require 'securerandom'

RSpec.describe Vestabule::Layout do
  subject(:layout) { described_class.new(rows) }

  let(:rows) do
    <<~ROWS.gsub("\n", '').gsub(' ', '')
      [
        [0,0,63,63,63,0,0,64,64,64,0,0,67,67,67,0,66,66,0,66,66,0],
        [0,63,63,0,63,63,64,64,0,64,64,67,67,0,67,67,66,66,0,66,66,0],
        [0,0,0,0,63,63,64,64,0,64,64,0,0,0,67,67,66,66,0,66,66,0],
        [0,0,0,63,63,0,64,64,0,64,64,0,0,67,67,0,66,66,66,66,66,0],
        [0,0,63,63,0,0,64,64,0,64,64,0,67,67,0,0,0,0,0,66,66,0],
        [0,63,63,63,63,63,0,64,64,64,0,67,67,67,67,67,0,0,0,66,66,0]
      ]
    ROWS
  end

  describe '#initialize' do
    let(:expected) do
      [
        [0, 0, 63, 63, 63, 0, 0, 64, 64, 64, 0, 0, 67, 67, 67, 0, 66, 66, 0, 66, 66, 0],
        [0, 63, 63, 0, 63, 63, 64, 64, 0, 64, 64, 67, 67, 0, 67, 67, 66, 66, 0, 66, 66, 0],
        [0, 0, 0, 0, 63, 63, 64, 64, 0, 64, 64, 0, 0, 0, 67, 67, 66, 66, 0, 66, 66, 0],
        [0, 0, 0, 63, 63, 0, 64, 64, 0, 64, 64, 0, 0, 67, 67, 0, 66, 66, 66, 66, 66, 0],
        [0, 0, 63, 63, 0, 0, 64, 64, 0, 64, 64, 0, 67, 67, 0, 0, 0, 0, 0, 66, 66, 0],
        [0, 63, 63, 63, 63, 63, 0, 64, 64, 64, 0, 67, 67, 67, 67, 67, 0, 0, 0, 66, 66, 0]
      ]
    end

    it 'sets the rows as a reader' do
      expect(layout.rows).to eq(expected)
    end
  end

  describe '#to_text' do
    let(:rows) do
      <<~ROWS.gsub("\n", '').gsub(' ', '')
        [
          [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
          [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
          [0,0,0,0,0,8,5,12,12,15,0,23,15,18,12,4,0,0,0,0,0,0],
          [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
          [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
          [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
        ]
      ROWS
    end

    it 'prints the layout as readable text' do
      expect(layout.print_preview).to eq(
        "                      \n                      \n     " \
        "HELLO WORLD      \n                      \n                      " \
        "\n                      "
      )
    end
  end
end
